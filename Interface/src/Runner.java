/**
 * 是抽象方法的集合，接口通常以interface来声明。一个类通过继承接口的方式，从而来继承接口的抽象方法。
 * 有时必须从几个类中派生出一个子类，继承它们所有的属性和方法。
 * 但是，Java不支持多重继承。有了接口，就可以得到多重继承的效果。
 * 不能用于实例化对象。
 * 没有构造方法。
 * 中所有的方法必须是抽象方法。
 * 不能包含成员变量，除了 static 和 final 变量。
 * 不是被类继承了，而是要被类实现。
 * 支持多继承。
 *
 * 每一个方法也是隐式抽象的,接口中的方法会被隐式的指定为 public abstract
 * 可以含有变量，但是接口中的变量会被隐式的指定为 public static final 变量
 * 接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。
 * 一个类只能继承一个抽象类，而一个类却可以实现多个接口。
 *
 * */
public interface Runner {
  int id = 1;         //接口中的变量会被隐式的指定为 public static final 变量
  public void start();
  public void run();
  public void stop();
}